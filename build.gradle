plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "io.micronaut.application" version '1.3.2'
}

version "0.1"
group "com.example.micronaut"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime "netty"
    testRuntime "junit5"
    processing {
        incremental true
        annotations "com.example.micronaut.*"
    }
}

dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")

    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'

    runtimeOnly "org.codehaus.groovy:groovy:3.0.5"

    implementation("io.micronaut.mongodb:micronaut-mongo-sync")
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.0.0")

    annotationProcessor("io.micronaut.openapi:micronaut-openapi:2.3.0")
    implementation("io.swagger.core.v3:swagger-annotations")
}

mainClassName = "com.example.micronault.Application"
java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,redoc.enabled=true,swagger-ui.theme=flattop'
}



